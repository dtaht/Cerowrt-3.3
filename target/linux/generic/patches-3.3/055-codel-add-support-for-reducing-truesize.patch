From 9b5225ae517789d98b007bdba25eaa76e47479b6 Mon Sep 17 00:00:00 2001
From: Dave Taht <dave.taht@bufferbloat.net>
Date: Sun, 26 Aug 2012 20:54:15 -0700
Subject: [PATCH 3/4] codel: add support for reducing truesize

As I have no idea if I found the right places for packet accounting
in the code, just hard code for qlen > sch->limit/8.

Have to write some more pieces to set it and I think just the
above is less hassle and fine.
---
 include/net/codel.h   |    4 +++-
 net/sched/sch_codel.c |   12 +++++++-----
 2 files changed, 10 insertions(+), 6 deletions(-)

diff --git a/include/net/codel.h b/include/net/codel.h
index 57031adf..586039c 100644
--- a/include/net/codel.h
+++ b/include/net/codel.h
@@ -115,6 +115,7 @@ static inline u32 codel_time_to_us(codel_time_t val)
 struct codel_params {
 	codel_time_t	target;
 	codel_time_t	interval;
+	u32		truesize_limit;
 	bool		ecn;
 };
 
@@ -131,13 +132,14 @@ struct codel_params {
  * @ldelay:		sojourn time of last dequeued packet
  */
 struct codel_vars {
+	u32		truesize_sum;
 	u32		count;
-	u32		lastcount;
 	bool		dropping;
 	u16		rec_inv_sqrt;
 	codel_time_t	first_above_time;
 	codel_time_t	drop_next;
 	codel_time_t	ldelay;
+	u32		lastcount;
 };
 
 #define REC_INV_SQRT_BITS (8 * sizeof(u16)) /* or sizeof_in_bits(rec_inv_sqrt) */
diff --git a/net/sched/sch_codel.c b/net/sched/sch_codel.c
index 2f9ab17..e7c6b49 100644
--- a/net/sched/sch_codel.c
+++ b/net/sched/sch_codel.c
@@ -67,7 +67,7 @@ struct codel_sched_data {
 static struct sk_buff *dequeue(struct codel_vars *vars, struct Qdisc *sch)
 {
 	struct sk_buff *skb = __skb_dequeue(&sch->q);
-
+	if(skb) vars->truesize_sum -= skb->truesize;
 	prefetch(&skb->end); /* we'll need skb_shinfo() */
 	return skb;
 }
@@ -93,13 +93,15 @@ static struct sk_buff *codel_qdisc_dequeue(struct Qdisc *sch)
 
 static int codel_qdisc_enqueue(struct sk_buff *skb, struct Qdisc *sch)
 {
-	struct codel_sched_data *q;
-
-	if (likely(qdisc_qlen(sch) < sch->limit)) {
+	struct codel_sched_data *q = qdisc_priv(sch);
+	int qlen;
+	if (likely((qlen = qdisc_qlen(sch)) < sch->limit)) {
+		if (qlen > sch->limit / 8)
+	        	skb = skb_reduce_truesize(skb);
+		q->vars.truesize_sum += skb->truesize;
 		codel_set_enqueue_time(skb);
 		return qdisc_enqueue_tail(skb, sch);
 	}
-	q = qdisc_priv(sch);
 	q->drop_overlimit++;
 	return qdisc_drop(skb, sch);
 }
-- 
1.7.9.5

